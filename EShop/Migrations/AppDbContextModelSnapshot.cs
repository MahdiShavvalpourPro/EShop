// <auto-generated />
using System;
using EShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EShop.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersianDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(120),
                            Description = "this curse will be asp.net 8",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Asp.Net Core",
                            PersianDate = "1403/04/29"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(261),
                            Description = "this curse will be JS Base",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Java Script",
                            PersianDate = "1403/04/29"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(394),
                            Description = "hyper text transfer protocol",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Html",
                            PersianDate = "1403/04/29"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(529),
                            Description = "high level language",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "C#",
                            PersianDate = "1403/04/29"
                        });
                });

            modelBuilder.Entity("EShop.Models.Entities.CategoryToProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryToProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("EShop.Models.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersianDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityInStock")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(774),
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersianDate = "1403/04/29",
                            Price = 85000m,
                            QuantityInStock = 12m
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(916),
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersianDate = "1403/04/29",
                            Price = 1200000m,
                            QuantityInStock = 3m
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(1050),
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersianDate = "1403/04/29",
                            Price = 500000m,
                            QuantityInStock = 7m
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(1184),
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersianDate = "1403/04/29",
                            Price = 465200m,
                            QuantityInStock = 21m
                        });
                });

            modelBuilder.Entity("EShop.Models.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinally")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EShop.Models.Entities.OrderDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("DetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("EShop.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PersianDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(1340),
                            Description = "این دوره شامل پروژه عملی است",
                            ItemId = 2,
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دوره پروژه محور JS",
                            PersianDate = "1403/04/29",
                            Price = 150000m
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(1485),
                            Description = "این دوره شامل پروژه عملی است",
                            ItemId = 1,
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دوره پیشرفته Asp",
                            PersianDate = "1403/04/29",
                            Price = 300000m
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(1620),
                            Description = "از هیچی به 100 برس",
                            ItemId = 4,
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "مبانی Csharp",
                            PersianDate = "1403/04/29",
                            Price = 0m
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 7, 19, 21, 1, 57, 735, DateTimeKind.Local).AddTicks(1755),
                            Description = "از هیچی به 100 برس",
                            ItemId = 3,
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "صفر تا 100 دوره html",
                            PersianDate = "1403/04/29",
                            Price = 95000m
                        });
                });

            modelBuilder.Entity("EShop.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersianDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EShop.Models.Entities.CategoryToProduct", b =>
                {
                    b.HasOne("EShop.Models.Entities.Category", "Category")
                        .WithMany("CategoryToProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Models.Entities.Product", "Product")
                        .WithMany("CategoryToProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShop.Models.Entities.Order", b =>
                {
                    b.HasOne("EShop.Models.Entities.User", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("EShop.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("EShop.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShop.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShop.Models.Entities.Product", b =>
                {
                    b.HasOne("EShop.Models.Entities.Item", "Item")
                        .WithOne("product")
                        .HasForeignKey("EShop.Models.Entities.Product", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("EShop.Models.Entities.Category", b =>
                {
                    b.Navigation("CategoryToProducts");
                });

            modelBuilder.Entity("EShop.Models.Entities.Item", b =>
                {
                    b.Navigation("product")
                        .IsRequired();
                });

            modelBuilder.Entity("EShop.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EShop.Models.Entities.Product", b =>
                {
                    b.Navigation("CategoryToProducts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("EShop.Models.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
